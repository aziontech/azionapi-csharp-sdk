/*
 * Edge Functions Instances API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = edgefunctionsinstance_edgefirewall.Client.OpenAPIDateConverter;

namespace edgefunctionsinstance_edgefirewall.Model
{
    /// <summary>
    /// CreateEdgeFunctionsInstancesRequest
    /// </summary>
    [DataContract(Name = "CreateEdgeFunctionsInstancesRequest")]
    public partial class CreateEdgeFunctionsInstancesRequest : IEquatable<CreateEdgeFunctionsInstancesRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateEdgeFunctionsInstancesRequest" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="edgeFunction">edgeFunction.</param>
        /// <param name="jsonArgs">jsonArgs.</param>
        public CreateEdgeFunctionsInstancesRequest(string name = default(string), long edgeFunction = default(long), Object jsonArgs = default(Object))
        {
            this.Name = name;
            this.EdgeFunction = edgeFunction;
            this.JsonArgs = jsonArgs;
        }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        /// <example>Edge Functions Instance</example>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets EdgeFunction
        /// </summary>
        [DataMember(Name = "edge_function", EmitDefaultValue = false)]
        public long EdgeFunction { get; set; }

        /// <summary>
        /// Gets or Sets JsonArgs
        /// </summary>
        [DataMember(Name = "json_args", EmitDefaultValue = true)]
        public Object JsonArgs { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateEdgeFunctionsInstancesRequest {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  EdgeFunction: ").Append(EdgeFunction).Append("\n");
            sb.Append("  JsonArgs: ").Append(JsonArgs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CreateEdgeFunctionsInstancesRequest);
        }

        /// <summary>
        /// Returns true if CreateEdgeFunctionsInstancesRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of CreateEdgeFunctionsInstancesRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateEdgeFunctionsInstancesRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.EdgeFunction == input.EdgeFunction ||
                    this.EdgeFunction.Equals(input.EdgeFunction)
                ) && 
                (
                    this.JsonArgs == input.JsonArgs ||
                    (this.JsonArgs != null &&
                    this.JsonArgs.Equals(input.JsonArgs))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.EdgeFunction.GetHashCode();
                if (this.JsonArgs != null)
                {
                    hashCode = (hashCode * 59) + this.JsonArgs.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
