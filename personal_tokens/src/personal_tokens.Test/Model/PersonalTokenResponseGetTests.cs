/*
 * Personal Tokens - OpenAPI
 *
 * The Personal Tokens API allows you to manage your existing personal tokens. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using personal_tokens.Model;
using personal_tokens.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace personal_tokens.Test.Model
{
    /// <summary>
    ///  Class for testing PersonalTokenResponseGet
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PersonalTokenResponseGetTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PersonalTokenResponseGet
        //private PersonalTokenResponseGet instance;

        public PersonalTokenResponseGetTests()
        {
            // TODO uncomment below to create an instance of PersonalTokenResponseGet
            //instance = new PersonalTokenResponseGet();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PersonalTokenResponseGet
        /// </summary>
        [Fact]
        public void PersonalTokenResponseGetInstanceTest()
        {
            // TODO uncomment below to test "IsType" PersonalTokenResponseGet
            //Assert.IsType<PersonalTokenResponseGet>(instance);
        }


        /// <summary>
        /// Test the property 'Uuid'
        /// </summary>
        [Fact]
        public void UuidTest()
        {
            // TODO unit test for the property 'Uuid'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Fact]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }
        /// <summary>
        /// Test the property 'ExpiresAt'
        /// </summary>
        [Fact]
        public void ExpiresAtTest()
        {
            // TODO unit test for the property 'ExpiresAt'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

    }

}
