/*
 * Web Application Firewall API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using waf.Model;
using waf.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace waf.Test.Model
{
    /// <summary>
    ///  Class for testing SingleWAF
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SingleWAFTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SingleWAF
        //private SingleWAF instance;

        public SingleWAFTests()
        {
            // TODO uncomment below to create an instance of SingleWAF
            //instance = new SingleWAF();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SingleWAF
        /// </summary>
        [Fact]
        public void SingleWAFInstanceTest()
        {
            // TODO uncomment below to test "IsType" SingleWAF
            //Assert.IsType<SingleWAF>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Mode'
        /// </summary>
        [Fact]
        public void ModeTest()
        {
            // TODO unit test for the property 'Mode'
        }

        /// <summary>
        /// Test the property 'Active'
        /// </summary>
        [Fact]
        public void ActiveTest()
        {
            // TODO unit test for the property 'Active'
        }

        /// <summary>
        /// Test the property 'SqlInjection'
        /// </summary>
        [Fact]
        public void SqlInjectionTest()
        {
            // TODO unit test for the property 'SqlInjection'
        }

        /// <summary>
        /// Test the property 'SqlInjectionSensitivity'
        /// </summary>
        [Fact]
        public void SqlInjectionSensitivityTest()
        {
            // TODO unit test for the property 'SqlInjectionSensitivity'
        }

        /// <summary>
        /// Test the property 'RemoteFileInclusion'
        /// </summary>
        [Fact]
        public void RemoteFileInclusionTest()
        {
            // TODO unit test for the property 'RemoteFileInclusion'
        }

        /// <summary>
        /// Test the property 'RemoteFileInclusionSensitivity'
        /// </summary>
        [Fact]
        public void RemoteFileInclusionSensitivityTest()
        {
            // TODO unit test for the property 'RemoteFileInclusionSensitivity'
        }

        /// <summary>
        /// Test the property 'DirectoryTraversal'
        /// </summary>
        [Fact]
        public void DirectoryTraversalTest()
        {
            // TODO unit test for the property 'DirectoryTraversal'
        }

        /// <summary>
        /// Test the property 'DirectoryTraversalSensitivity'
        /// </summary>
        [Fact]
        public void DirectoryTraversalSensitivityTest()
        {
            // TODO unit test for the property 'DirectoryTraversalSensitivity'
        }

        /// <summary>
        /// Test the property 'CrossSiteScripting'
        /// </summary>
        [Fact]
        public void CrossSiteScriptingTest()
        {
            // TODO unit test for the property 'CrossSiteScripting'
        }

        /// <summary>
        /// Test the property 'CrossSiteScriptingSensitivity'
        /// </summary>
        [Fact]
        public void CrossSiteScriptingSensitivityTest()
        {
            // TODO unit test for the property 'CrossSiteScriptingSensitivity'
        }

        /// <summary>
        /// Test the property 'EvadingTricks'
        /// </summary>
        [Fact]
        public void EvadingTricksTest()
        {
            // TODO unit test for the property 'EvadingTricks'
        }

        /// <summary>
        /// Test the property 'EvadingTricksSensitivity'
        /// </summary>
        [Fact]
        public void EvadingTricksSensitivityTest()
        {
            // TODO unit test for the property 'EvadingTricksSensitivity'
        }

        /// <summary>
        /// Test the property 'FileUpload'
        /// </summary>
        [Fact]
        public void FileUploadTest()
        {
            // TODO unit test for the property 'FileUpload'
        }

        /// <summary>
        /// Test the property 'FileUploadSensitivity'
        /// </summary>
        [Fact]
        public void FileUploadSensitivityTest()
        {
            // TODO unit test for the property 'FileUploadSensitivity'
        }

        /// <summary>
        /// Test the property 'UnwantedAccess'
        /// </summary>
        [Fact]
        public void UnwantedAccessTest()
        {
            // TODO unit test for the property 'UnwantedAccess'
        }

        /// <summary>
        /// Test the property 'UnwantedAccessSensitivity'
        /// </summary>
        [Fact]
        public void UnwantedAccessSensitivityTest()
        {
            // TODO unit test for the property 'UnwantedAccessSensitivity'
        }

        /// <summary>
        /// Test the property 'IdentifiedAttack'
        /// </summary>
        [Fact]
        public void IdentifiedAttackTest()
        {
            // TODO unit test for the property 'IdentifiedAttack'
        }

        /// <summary>
        /// Test the property 'IdentifiedAttackSensitivity'
        /// </summary>
        [Fact]
        public void IdentifiedAttackSensitivityTest()
        {
            // TODO unit test for the property 'IdentifiedAttackSensitivity'
        }

        /// <summary>
        /// Test the property 'BypassAddresses'
        /// </summary>
        [Fact]
        public void BypassAddressesTest()
        {
            // TODO unit test for the property 'BypassAddresses'
        }
    }
}
