/*
 * Data Streaming - OpenAPI
 *
 * The Data Streaming API allows you to manage your existing data streamings and templates. Data Streaming allows you to feed your stream processing, SIEM, and big data platforms with the event logs from your applications on Azion in real time. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = data_streaming.Client.OpenAPIDateConverter;

namespace data_streaming.Model
{
    /// <summary>
    /// EndpointAzureMonitor
    /// </summary>
    [DataContract(Name = "Endpoint_Azure_Monitor")]
    public partial class EndpointAzureMonitor : IEquatable<EndpointAzureMonitor>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EndpointAzureMonitor" /> class.
        /// </summary>
        /// <param name="endpointType">endpointType.</param>
        /// <param name="logType">logType.</param>
        /// <param name="sharedKey">sharedKey.</param>
        /// <param name="timeGeneratedField">timeGeneratedField.</param>
        /// <param name="workspaceId">workspaceId.</param>
        public EndpointAzureMonitor(string endpointType = default(string), string logType = default(string), string sharedKey = default(string), string timeGeneratedField = default(string), string workspaceId = default(string))
        {
            this.EndpointType = endpointType;
            this.LogType = logType;
            this.SharedKey = sharedKey;
            this.TimeGeneratedField = timeGeneratedField;
            this.WorkspaceId = workspaceId;
        }

        /// <summary>
        /// Gets or Sets EndpointType
        /// </summary>
        /// <example>&quot;azure_monitor&quot;</example>
        [DataMember(Name = "endpoint_type", EmitDefaultValue = false)]
        public string EndpointType { get; set; }

        /// <summary>
        /// Gets or Sets LogType
        /// </summary>
        [DataMember(Name = "log_type", EmitDefaultValue = false)]
        public string LogType { get; set; }

        /// <summary>
        /// Gets or Sets SharedKey
        /// </summary>
        [DataMember(Name = "shared_key", EmitDefaultValue = false)]
        public string SharedKey { get; set; }

        /// <summary>
        /// Gets or Sets TimeGeneratedField
        /// </summary>
        [DataMember(Name = "time_generated_field", EmitDefaultValue = false)]
        public string TimeGeneratedField { get; set; }

        /// <summary>
        /// Gets or Sets WorkspaceId
        /// </summary>
        [DataMember(Name = "workspace_id", EmitDefaultValue = false)]
        public string WorkspaceId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EndpointAzureMonitor {\n");
            sb.Append("  EndpointType: ").Append(EndpointType).Append("\n");
            sb.Append("  LogType: ").Append(LogType).Append("\n");
            sb.Append("  SharedKey: ").Append(SharedKey).Append("\n");
            sb.Append("  TimeGeneratedField: ").Append(TimeGeneratedField).Append("\n");
            sb.Append("  WorkspaceId: ").Append(WorkspaceId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EndpointAzureMonitor);
        }

        /// <summary>
        /// Returns true if EndpointAzureMonitor instances are equal
        /// </summary>
        /// <param name="input">Instance of EndpointAzureMonitor to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EndpointAzureMonitor input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.EndpointType == input.EndpointType ||
                    (this.EndpointType != null &&
                    this.EndpointType.Equals(input.EndpointType))
                ) && 
                (
                    this.LogType == input.LogType ||
                    (this.LogType != null &&
                    this.LogType.Equals(input.LogType))
                ) && 
                (
                    this.SharedKey == input.SharedKey ||
                    (this.SharedKey != null &&
                    this.SharedKey.Equals(input.SharedKey))
                ) && 
                (
                    this.TimeGeneratedField == input.TimeGeneratedField ||
                    (this.TimeGeneratedField != null &&
                    this.TimeGeneratedField.Equals(input.TimeGeneratedField))
                ) && 
                (
                    this.WorkspaceId == input.WorkspaceId ||
                    (this.WorkspaceId != null &&
                    this.WorkspaceId.Equals(input.WorkspaceId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EndpointType != null)
                {
                    hashCode = (hashCode * 59) + this.EndpointType.GetHashCode();
                }
                if (this.LogType != null)
                {
                    hashCode = (hashCode * 59) + this.LogType.GetHashCode();
                }
                if (this.SharedKey != null)
                {
                    hashCode = (hashCode * 59) + this.SharedKey.GetHashCode();
                }
                if (this.TimeGeneratedField != null)
                {
                    hashCode = (hashCode * 59) + this.TimeGeneratedField.GetHashCode();
                }
                if (this.WorkspaceId != null)
                {
                    hashCode = (hashCode * 59) + this.WorkspaceId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // WorkspaceId (string) pattern
            Regex regexWorkspaceId = new Regex(@"[a-zA-Z0-9]{5}-[a-zA-Z0-9]{5}-[a-zA-Z0-9]{6}", RegexOptions.CultureInvariant);
            if (false == regexWorkspaceId.Match(this.WorkspaceId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for WorkspaceId, must match a pattern of " + regexWorkspaceId, new [] { "WorkspaceId" });
            }

            yield break;
        }
    }

}
