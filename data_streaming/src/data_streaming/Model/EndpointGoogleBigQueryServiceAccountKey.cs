/*
 * Data Streaming - OpenAPI
 *
 * The Data Streaming API allows you to manage your existing data streamings and templates. Data Streaming allows you to feed your stream processing, SIEM, and big data platforms with the event logs from your applications on Azion in real time. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = data_streaming.Client.OpenAPIDateConverter;

namespace data_streaming.Model
{
    /// <summary>
    /// EndpointGoogleBigQueryServiceAccountKey
    /// </summary>
    [DataContract(Name = "Endpoint_Google_BigQuery_service_account_key")]
    public partial class EndpointGoogleBigQueryServiceAccountKey : IEquatable<EndpointGoogleBigQueryServiceAccountKey>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EndpointGoogleBigQueryServiceAccountKey" /> class.
        /// </summary>
        /// <param name="serviceAccountKey">serviceAccountKey.</param>
        public EndpointGoogleBigQueryServiceAccountKey(string serviceAccountKey = default(string))
        {
            this.ServiceAccountKey = serviceAccountKey;
        }

        /// <summary>
        /// Gets or Sets ServiceAccountKey
        /// </summary>
        [DataMember(Name = "service_account_key", EmitDefaultValue = false)]
        public string ServiceAccountKey { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EndpointGoogleBigQueryServiceAccountKey {\n");
            sb.Append("  ServiceAccountKey: ").Append(ServiceAccountKey).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EndpointGoogleBigQueryServiceAccountKey);
        }

        /// <summary>
        /// Returns true if EndpointGoogleBigQueryServiceAccountKey instances are equal
        /// </summary>
        /// <param name="input">Instance of EndpointGoogleBigQueryServiceAccountKey to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EndpointGoogleBigQueryServiceAccountKey input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ServiceAccountKey == input.ServiceAccountKey ||
                    (this.ServiceAccountKey != null &&
                    this.ServiceAccountKey.Equals(input.ServiceAccountKey))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ServiceAccountKey != null)
                {
                    hashCode = (hashCode * 59) + this.ServiceAccountKey.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
