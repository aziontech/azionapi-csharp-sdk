/*
 * Domain API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using domains.Model;
using domains.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace domains.Test.Model
{
    /// <summary>
    ///  Class for testing DomainEntity
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DomainEntityTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DomainEntity
        //private DomainEntity instance;

        public DomainEntityTests()
        {
            // TODO uncomment below to create an instance of DomainEntity
            //instance = new DomainEntity();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DomainEntity
        /// </summary>
        [Fact]
        public void DomainEntityInstanceTest()
        {
            // TODO uncomment below to test "IsType" DomainEntity
            //Assert.IsType<DomainEntity>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Cnames'
        /// </summary>
        [Fact]
        public void CnamesTest()
        {
            // TODO unit test for the property 'Cnames'
        }

        /// <summary>
        /// Test the property 'CnameAccessOnly'
        /// </summary>
        [Fact]
        public void CnameAccessOnlyTest()
        {
            // TODO unit test for the property 'CnameAccessOnly'
        }

        /// <summary>
        /// Test the property 'IsActive'
        /// </summary>
        [Fact]
        public void IsActiveTest()
        {
            // TODO unit test for the property 'IsActive'
        }

        /// <summary>
        /// Test the property 'EdgeApplicationId'
        /// </summary>
        [Fact]
        public void EdgeApplicationIdTest()
        {
            // TODO unit test for the property 'EdgeApplicationId'
        }

        /// <summary>
        /// Test the property 'DigitalCertificateId'
        /// </summary>
        [Fact]
        public void DigitalCertificateIdTest()
        {
            // TODO unit test for the property 'DigitalCertificateId'
        }

        /// <summary>
        /// Test the property 'VarEnvironment'
        /// </summary>
        [Fact]
        public void VarEnvironmentTest()
        {
            // TODO unit test for the property 'VarEnvironment'
        }

        /// <summary>
        /// Test the property 'IsMtlsEnabled'
        /// </summary>
        [Fact]
        public void IsMtlsEnabledTest()
        {
            // TODO unit test for the property 'IsMtlsEnabled'
        }

        /// <summary>
        /// Test the property 'MtlsTrustedCaCertificateId'
        /// </summary>
        [Fact]
        public void MtlsTrustedCaCertificateIdTest()
        {
            // TODO unit test for the property 'MtlsTrustedCaCertificateId'
        }

        /// <summary>
        /// Test the property 'MtlsVerification'
        /// </summary>
        [Fact]
        public void MtlsVerificationTest()
        {
            // TODO unit test for the property 'MtlsVerification'
        }

        /// <summary>
        /// Test the property 'CrlList'
        /// </summary>
        [Fact]
        public void CrlListTest()
        {
            // TODO unit test for the property 'CrlList'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'DomainName'
        /// </summary>
        [Fact]
        public void DomainNameTest()
        {
            // TODO unit test for the property 'DomainName'
        }
    }
}
