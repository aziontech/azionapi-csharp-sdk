// <auto-generated>
/*
 * Edge Application API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using edgeapplications.Client;

namespace edgeapplications.Model
{
    /// <summary>
    /// RulesEngineBehaviorEntry
    /// </summary>
    public partial class RulesEngineBehaviorEntry : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RulesEngineBehaviorEntry" /> class.
        /// </summary>
        /// <param name="rulesEngineBehaviorString"></param>
        /// <param name="rulesEngineBehaviorObject"></param>
        public RulesEngineBehaviorEntry(Option<RulesEngineBehaviorString?> rulesEngineBehaviorString, Option<RulesEngineBehaviorObject?> rulesEngineBehaviorObject)
        {
            RulesEngineBehaviorStringOption = rulesEngineBehaviorString;
            RulesEngineBehaviorObjectOption = rulesEngineBehaviorObject;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of RulesEngineBehaviorString
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<RulesEngineBehaviorString?> RulesEngineBehaviorStringOption { get; private set; }

        /// <summary>
        /// Gets or Sets RulesEngineBehaviorString
        /// </summary>
        public RulesEngineBehaviorString? RulesEngineBehaviorString { get { return this.RulesEngineBehaviorStringOption; } set { this.RulesEngineBehaviorStringOption = new(value); } }

        /// <summary>
        /// Used to track the state of RulesEngineBehaviorObject
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<RulesEngineBehaviorObject?> RulesEngineBehaviorObjectOption { get; private set; }

        /// <summary>
        /// Gets or Sets RulesEngineBehaviorObject
        /// </summary>
        public RulesEngineBehaviorObject? RulesEngineBehaviorObject { get { return this.RulesEngineBehaviorObjectOption; } set { this.RulesEngineBehaviorObjectOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RulesEngineBehaviorEntry {\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="RulesEngineBehaviorEntry" />
    /// </summary>
    public class RulesEngineBehaviorEntryJsonConverter : JsonConverter<RulesEngineBehaviorEntry>
    {
        /// <summary>
        /// Deserializes json to <see cref="RulesEngineBehaviorEntry" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override RulesEngineBehaviorEntry Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            RulesEngineBehaviorString? rulesEngineBehaviorString = default;
            RulesEngineBehaviorObject? rulesEngineBehaviorObject = default;

            Utf8JsonReader utf8JsonReaderAnyOf = utf8JsonReader;
            while (utf8JsonReaderAnyOf.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReaderAnyOf.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReaderAnyOf.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReaderAnyOf.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReaderAnyOf.CurrentDepth)
                    break;

                if (utf8JsonReaderAnyOf.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReaderAnyOf.CurrentDepth - 1)
                {
                    Utf8JsonReader utf8JsonReaderRulesEngineBehaviorString = utf8JsonReader;
                    ClientUtils.TryDeserialize<RulesEngineBehaviorString?>(ref utf8JsonReaderRulesEngineBehaviorString, jsonSerializerOptions, out rulesEngineBehaviorString);

                    Utf8JsonReader utf8JsonReaderRulesEngineBehaviorObject = utf8JsonReader;
                    ClientUtils.TryDeserialize<RulesEngineBehaviorObject?>(ref utf8JsonReaderRulesEngineBehaviorObject, jsonSerializerOptions, out rulesEngineBehaviorObject);
                }
            }

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        default:
                            break;
                    }
                }
            }

            Option<RulesEngineBehaviorString?> rulesEngineBehaviorStringParsedValue = rulesEngineBehaviorString == null
                ? default
                : new Option<RulesEngineBehaviorString?>(rulesEngineBehaviorString);
            Option<RulesEngineBehaviorObject?> rulesEngineBehaviorObjectParsedValue = rulesEngineBehaviorObject == null
                ? default
                : new Option<RulesEngineBehaviorObject?>(rulesEngineBehaviorObject);

            return new RulesEngineBehaviorEntry(rulesEngineBehaviorStringParsedValue, rulesEngineBehaviorObjectParsedValue);
        }

        /// <summary>
        /// Serializes a <see cref="RulesEngineBehaviorEntry" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="rulesEngineBehaviorEntry"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, RulesEngineBehaviorEntry rulesEngineBehaviorEntry, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            if (rulesEngineBehaviorEntry.RulesEngineBehaviorStringOption.IsSet && rulesEngineBehaviorEntry.RulesEngineBehaviorStringOption.Value != null)
            {
                RulesEngineBehaviorStringJsonConverter RulesEngineBehaviorStringJsonConverter = (RulesEngineBehaviorStringJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(rulesEngineBehaviorEntry.RulesEngineBehaviorStringOption.Value.GetType()));
                RulesEngineBehaviorStringJsonConverter.WriteProperties(writer, rulesEngineBehaviorEntry.RulesEngineBehaviorStringOption.Value, jsonSerializerOptions);
            }

            if (rulesEngineBehaviorEntry.RulesEngineBehaviorObjectOption.IsSet && rulesEngineBehaviorEntry.RulesEngineBehaviorObjectOption.Value != null)
            {
                RulesEngineBehaviorObjectJsonConverter RulesEngineBehaviorObjectJsonConverter = (RulesEngineBehaviorObjectJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(rulesEngineBehaviorEntry.RulesEngineBehaviorObjectOption.Value.GetType()));
                RulesEngineBehaviorObjectJsonConverter.WriteProperties(writer, rulesEngineBehaviorEntry.RulesEngineBehaviorObjectOption.Value, jsonSerializerOptions);
            }

            WriteProperties(writer, rulesEngineBehaviorEntry, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="RulesEngineBehaviorEntry" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="rulesEngineBehaviorEntry"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, RulesEngineBehaviorEntry rulesEngineBehaviorEntry, JsonSerializerOptions jsonSerializerOptions)
        {

        }
    }
}
